// angular-formly version 2.0.1 built with ♥ by Astrism <astrisms@gmail.com>, Kent C. Dodds <kent@doddsfamily.us> (ó ì_í)=óò=(ì_í ò)

!function(t,e){"object"==typeof exports&&"object"==typeof module?module.exports=e(require("angular")):"function"==typeof define&&define.amd?define(["angular"],e):"object"==typeof exports?exports.ngFormly=e(require("angular")):t.ngFormly=e(t.angular)}(this,function(t){return function(t){function e(n){if(r[n])return r[n].exports;var o=r[n]={exports:{},id:n,loaded:!1};return t[n].call(o.exports,o,o.exports,e),o.loaded=!0,o.exports}var r={};return e.m=t,e.c=r,e.p="",e(0)}([function(t,e,r){"use strict";var n="formly",o=r(1),i=o.module(n,[]);r(11)(i),r(14)(i),r(6)(i),t.exports=n},function(t,e,r){"use strict";var n=r(16);n.version||(n=window.angular),t.exports=n},function(t){"use strict";t.exports=function(t){t.directive("formlyCustomValidation",["formlyUtil",function(t){return{require:"ngModel",link:function(e,r,n,o){var i=e.$eval(n.formlyCustomValidation);if(i){var a=o.hasOwnProperty("$validators");angular.forEach(i,function(r,n){if(a){var i=r.isAsync?"$asyncValidators":"$validators";o[i][n]=function(n,o){return t.formlyEval(e,r,n,o)}}else o.$parsers.unshift(function(i){var a=t.formlyEval(e,r,o.$modelValue,i);return o.$setValidity(n,a),i})})}}}}])}},function(t){"use strict";t.exports=function(t){t.directive("formlyDynamicName",function(){return{restrict:"A",priority:599,controller:["$scope","$element","$attrs",function(t,e,r){e.removeAttr("formly-dynamic-name"),r.$set("name",t.$eval(r.formlyDynamicName)),delete r.formlyDynamicName}]}})}},function(t,e,r){"use strict";var n=r(1);t.exports=function(t){function e(t,e,r,o,i,a,l,f){function s(r){var n=r.template||i.getTemplate(r.type),a=r.templateUrl||i.getTemplateUrl(r.type);if(n)return e.when(n);if(a){var s={cache:o};return t.get(a,s).then(function(t){return t.data})["catch"](function(t){f("problem-loading-template-for-templateurl","Problem loading template for "+a,t)})}throw l.getFieldError("template-type-type-not-supported","template type '"+r.type+"' not supported. On element:",r)}function u(r){var i=c(r);return function(r){function a(t){var e=n.element(t),o=e.find("formly-transclude");return o.replaceWith(r),e}if(!i)return e.when(n.element(r));if(l.checkWrapper(i),i.template)return l.checkWrapperTemplate(i.template,i),e.when(a(i.template));var s={cache:o};return t.get(i.url,s).then(function(t){var e=t.data;return l.checkWrapperTemplate(e,i),a(e)})["catch"](function(t){f("proplem-loading-template-for-wrapper","Problem loading template for wrapper"+JSON.stringify(i),t)})}}function c(t){var e=t.wrapper;if(null===e)return"";var r=e;return e?"string"==typeof e&&(r=i.getTemplateWrapper(e)):r=i.getTemplateWrapper(),r}function p(t){function e(t){var e=0;return e+=n.isDefined(t.template)?1:0,e+=n.isDefined(t.type)?1:0,e+=n.isDefined(t.templateUrl)?1:0}var r=e(t);if(0===r)throw l.getFieldError("you-must-provide-one-of-type-template-or-templateurl-for-a-field","You must provide one of type, template, or templateUrl for a field",t);if(r>1)throw l.getFieldError("you-must-only-provide-a-type-template-or-templateurl-for-a-field","You must only provide a type, template, or templateUrl for a field",t)}return{restrict:"AE",transclude:!0,scope:{options:"=",model:"=",formId:"=?",index:"=?",fields:"=?",form:"=?"},controller:["$scope","$interval",function(t,e){function r(){var e=t.options,r=o();n.forEach(e.expressionProperties,function(o,i){"data"!==i?e[i]=a.formlyEval(t,o,r):(e.data=e.data||{},n.forEach(e.expressionProperties.data,function(n,o){e.data[o]=a.formlyEval(t,n,r)}))})}function o(e){return t.model&&t.options.key?(n.isDefined(e)&&(t.model[t.options.key]=e),t.model[t.options.key]):void 0}function i(){function r(){o(),e.cancel(s)}var o,i=2e3,a=5,l=0,s=e(function(){if(l++,!n.isDefined(t.options.key))return r();var e=t.form&&t.form[t.id];e?(t.options.formControl=e,r()):a*l>i&&(f("couldnt-set-the-formcontrol-after-timems","Couldn't set the formControl after "+i+"ms",t),r())},a);o=t.$on("$destroy",r)}t.id=a.getFieldId(t.formId,t.options,t.index),n.extend(t.options,{key:t.options.key||t.index||0,value:o,runExpressions:r,modelOptions:{getterSetter:!0,allowInvalid:!0}}),r(),t.options.noFormControl||i(),t.options.model&&t.$watch("options.model",r,!0)}],link:function(t,e){function n(n){e.html(n.html()),r(e.contents())(t)}p(t.options),s(t.options).then(u(t.options)).then(n)}}}t.directive("formlyField",e),e.tests=null,e.$inject=["$http","$q","$compile","$templateCache","formlyConfig","formlyUtil","formlyUsability","formlyWarn"]}},function(t,e,r){"use strict";var n=function(t){return Array.isArray(t)?t:Array.from(t)},o=Array.prototype.slice,i=r(1);t.exports=function(t){function e(){var t=1;return{restrict:"E",template:r(15),replace:!0,transclude:!0,scope:{fields:"=",model:"=",form:"=?"},controller:["$scope","formlyUsability",function(e,r){function a(t,e){t.key=t.key||e||0}function l(t,n){if(i.isDefined(t.watcher)){var o=t.watcher;i.isArray(o)||(o=[o]),i.forEach(o,function(o){if(!i.isDefined(o.listener))throw r.getFieldError("all-field-watchers-must-have-a-listener","All field watchers must have a listener",t);var a=f(o,t,n),l=s(o,t,n),u=o.type||"$watch";o.stopWatching=e[u](a,l,o.watchDeep)})}}function f(t,e,r){var a=t.expression||"model['"+e.key+"']";if(i.isFunction(a)){var l=a;a=function(){var e=u.apply(void 0,[t,r].concat(o.call(arguments)));return l.apply(void 0,n(e))},a.displayName="Formly Watch Expression for field for "+e.key}return a}function s(t,e,r){var a=t.listener;if(i.isFunction(a)){var l=a;a=function(){var e=u.apply(void 0,[t,r].concat(o.call(arguments)));return l.apply(void 0,n(e))},a.displayName="Formly Watch Listener for field for "+e.key}return a}function u(t,r){for(var o=arguments.length,i=Array(o>2?o-2:0),a=2;o>a;a++)i[a-2]=arguments[a];return[e.fields[r]].concat(n(i),[t.stopWatching])}e.formId="formly_"+t++,i.forEach(e.fields,a),i.forEach(e.fields,l),e.$watch("model",function(t){i.forEach(e.fields,function(e){e.runExpressions&&e.runExpressions(t)})},!0)}]}}t.directive("formlyForm",e),e.tests=null}},function(t,e,r){"use strict";t.exports=function(t){r(2)(t),r(3)(t),r(4)(t),r(5)(t)}},function(t,e,r){"use strict";var n=r(1);t.exports=function(t){function e(t){function e(t,r){a(t,r,!1,arguments),"string"==typeof t?(s(t,m,r,"templateUrls"),m[t]=r):n.forEach(t,function(t,r){e(r,t)})}function r(t){return m[t]}function o(t,e){a(t,e,!1,arguments),"string"==typeof t?(s(t,d,e,"templates"),d[t]=e):n.forEach(t,function(t,e){o(e,t)})}function i(t){return d[t]}function a(e,r,o,i){var a=o?"templateUrls":"templates";if(!n.isObject(e)){if(!n.isString(e))throw t.getFormlyError(null,"You must provide a name for all "+a+". You provided: "+JSON.stringify(i));if(!n.isString(r))throw t.getFormlyError(null,"You must provide a string for all "+a+". You provided: "+JSON.stringify(i))}}function l(t,e){return n.isArray(t)?t.map(l):n.isObject(t)?(t.name=t.name||e||v,f(t),n.isString(t.types)&&(t.types=[t.types]),y[t.name]=t,t):n.isString(t)?l({template:t,name:e}):void 0}function f(e){if(t.checkWrapper(e),e.template&&t.checkWrapperTemplate(e.template,e),s(e.name,y,e,"templateWrappers"),n.isDefined(e.types)&&!n.isArray(e.types)&&!n.isString(e.types))throw t.getFormlyError("Attempted to create a template wrapper with types that is not a string or an array of strings")}function s(t,e,r,n){!h.disableWarnings&&e.hasOwnProperty(t)&&c.warn(["Attempting to overwrite "+t+" on "+n+" which is currently",""+JSON.stringify(e[t])+" with "+JSON.stringify(r)].join(" "))}function u(t){return y[t||v]}var c,p=this,m={},d={},y={},v="default",h=this;n.extend(this,{getTemplateUrl:r,setTemplateUrl:e,getTemplate:i,setTemplate:o,setTemplateWrapper:l,getTemplateWrapper:u,disableWarnings:!1,$get:["$log",function(t){return c=t,p}]})}t.provider("formlyConfig",e),e.tests=null,e.$inject=["formlyUsabilityProvider"]}},function(t){"use strict";t.exports=function(t){t.constant("formlyErrorAndWarningsUrlPrefix","https://github.com/formly-js/angular-formly/wiki/Errors-and-Warnings#")}},function(t,e,r){"use strict";var n=r(1);t.exports=function(t){t.provider("formlyUsability",function(){function t(t,e,o){return new Error(r(t,e)+(" Field definition: "+n.toJson(o)))}function e(t,e){return e||(e=t,t=null),new Error(r(t,e))}function r(t,e){var r="";return null!==t&&(r=""+l+t),"Formly Error: "+e+". "+r}function o(t){if(t.template&&t.url)throw e("Template wrappers can only have a url or a template. This one provided both: "+JSON.stringify(t));if(!t.template&&!t.url)throw e("Template wrappers must have one of a url or a template. This one provided neither: "+JSON.stringify(t))}function i(t,r){if(-1===t.indexOf("<formly-transclude></formly-transclude>"))throw e('Template wrapper templates must use "<formly-transclude></formly-transclude>" somewhere in them. This one does not have "<formly-transclude></formly-transclude>" in it: '+t+"\nAdditional information: "+JSON.stringify(r))}var a=this,l="https://github.com/formly-js/angular-formly/wiki/Errors-and-Warnings#";n.extend(this,{getFormlyError:e,getFieldError:t,checkWrapper:o,checkWrapperTemplate:i,$get:function(){return a}})})}},function(t){"use strict";t.exports=function(t){t.constant("formlyVersion","2.0.1")}},function(t,e,r){"use strict";t.exports=function(t){r(9)(t),r(7)(t),r(10)(t),r(8)(t)}},function(t,e,r){"use strict";var n=r(1);t.exports=function(t){t.factory("formlyUtil",function(){function t(t,e,r,o){return n.isFunction(e)?e(o,r,t):t.$eval(e,{$viewValue:o,$modelValue:r})}function e(t,e,r){var n=e.type;return!n&&e.template?n="template":!n&&e.templateUrl&&(n="templateUrl"),[t,n,e.key,r].join("_")}return{formlyEval:t,getFieldId:e}})}},function(t){"use strict";var e=function(t){return Array.isArray(t)?t:Array.from(t)};t.exports=function(t){t.factory("formlyWarn",["formlyConfig","formlyErrorAndWarningsUrlPrefix","$log",function(t,r,n){return function(){if(!t.disableWarnings){var o=Array.prototype.slice.call(arguments),i=o.shift();o.unshift("Formly Warning:"),o.push(""+r+i),n.warn.apply(n,e(o))}}}])}},function(t,e,r){"use strict";t.exports=function(t){r(12)(t),r(13)(t)}},function(t){t.exports='<ng-form class="formly"\n         name="form"\n         role="form">\n  <div formly-field\n       ng-repeat="field in fields track by $index"\n       ng-if="!field.hide"\n       class="formly-field"\n       options="field"\n       model="field.model || model"\n       fields="fields"\n       form="form"\n       form-id="formId"\n       index="$index">\n  </div>\n  <div ng-transclude></div>\n</ng-form>\n'},function(e){e.exports=t}])});
//# sourceMappingURL=formly.min.js.map