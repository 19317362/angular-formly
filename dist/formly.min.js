angular.module("formly.render",[]),angular.module("formly",["formly.render"]),angular.module("formly.render").directive("formlyCustomValidation",["$parse",function(a){"use strict";return{require:"ngModel",link:function(b,c,d,e){function f(c,d,e){var f=!1;if(angular.isFunction(c))f=c(e,b);else{var g={value:e,options:b.options,result:b.result};f=a(c)(g)}return f}var g=b.$eval(d.formlyCustomValidation);if(g){if(angular.isArray(g)||g.name&&g.validate){angular.isArray(g)||(g=[g]);var h={};angular.forEach(g,function(a){h[a.name]=a.validate}),g=h}var i=e.hasOwnProperty("$validators");angular.forEach(g,function(a,b){if(i){var c=a.isAsync?"$asyncValidators":"$validators";e[c][b]=function(c,d){return f(a,b,c||d)}}else e.$parsers.unshift(function(c){var d=f(a,b,c);return e.$setValidity(b,d),c})})}}}}]),angular.module("formly.render").directive("formlyDynamicName",function(){"use strict";return{restrict:"A",priority:599,controller:["$scope","$element","$attrs",function(a,b,c){b.removeAttr("formly-dynamic-name"),c.$set("name",a.$eval(c.formlyDynamicName)),delete c.formlyDynamicName,a.$emit("formly-dynamic-name-update")}]}}),angular.module("formly.render").directive("formlyField",["$http","$compile","$templateCache","formlyConfig",function(a,b,c,d){"use strict";function e(){d.disableWarnings||console.warn.apply(console,arguments)}return{restrict:"AE",transclude:!0,scope:{optionsData:"&options",formId:"=",index:"=",fields:"=",result:"=formResult",form:"=?"},link:function(f,g){function h(a){g.html(a),b(g.contents())(f)}var i=0;if(i+=f.options.template?1:0,i+=f.options.type?1:0,i+=f.options.templateUrl?1:0,0===i)return void e("Formly Error: template type '"+f.options.type+"' not supported. On element:",g);if(i>1)throw new Error("Formly Error: You must only provide a type, template, or templateUrl for a field. Provided: "+JSON.stringify(f.options));var j=f.options.template||d.getTemplate(f.options.type);if(j)h(j);else{var k=f.options.templateUrl||d.getTemplateUrl(f.options.type);k&&a.get(k,{cache:c}).then(function(a){h(a.data)},function(a){e("Formly Error: Problem loading template for "+k,a)})}},controller:["$scope",function(a){a.options=a.optionsData();var b=a.options.type;!b&&a.options.template?b="template":!b&&a.options.templateUrl&&(b="templateUrl"),a.id=a.formId+b+a.options.key+a.index}]}}]),angular.module("formly.render").directive("formlyForm",["$timeout",function(a){"use strict";return{restrict:"E",templateUrl:"directives/formly-form.html",replace:!0,transclude:!0,scope:{fields:"=",options:"=?",result:"=",formOnParentScope:"=name"},compile:function(){return{post:function(a,b,c){a.formOnParentScope=a[c.name]}}},controller:["$scope","$element","$parse",function(b,c,d){angular.forEach(b.fields,function(a){if(angular.isDefined(a.watch)&&angular.isDefined(a.watch.expression)&&angular.isDefined(a.watch.listener)){var c=a.watch.expression;angular.isFunction(c)&&(c=function(){var b=Array.prototype.slice.call(arguments,0);return b.unshift(a),a.watch.expression.apply(this,b)}),b.$watch(c,function(){var b=Array.prototype.slice.call(arguments,0);return b.unshift(a),a.watch.listener.apply(this,b)})}}),b.$watch("result",function(){angular.forEach(b.fields,function(a){a.hideExpression&&(a.hide=d(a.hideExpression)(b.result)),a.requiredExpression&&(a.required=d(a.requiredExpression)(b.result))})},!0),b.$on("formly-dynamic-name-update",function(c){c.stopPropagation(),b.formOnParentScope&&a(function(){angular.forEach(b.fields,function(a){var c=b.formOnParentScope[a.key];c&&(a.formField=c)})})})}]}}]),angular.module("formly.render").provider("formlyConfig",function(){"use strict";function a(b,c){"string"==typeof b?e[b]=c:angular.forEach(b,function(b,c){a(c,b)})}function b(a){return e[a]}function c(a,b){"string"==typeof a?f[a]=b:angular.forEach(a,function(a,b){c(b,a)})}function d(a){return f[a]}var e={},f={};this.getTemplateUrl=b,this.setTemplateUrl=a,this.getTemplate=d,this.setTemplate=c,this.disableWarnings=!1,this.$get=function(){return this}}),angular.module("formly.render").run(["$templateCache",function(a){"use strict";a.put("directives/formly-form.html",'<ng-form class=formly role=form><formly-field ng-repeat="field in fields" class=formly-field options=field form-result=result fields=fields form=formOnParentScope form-id=options.uniqueFormId ng-if=!field.hide index=$index></formly-field><div ng-transclude></div></ng-form>')}]);
//# sourceMappingURL=formly.min.map